openapi: 3.0.2
# Revisions:
# 2019-05-09 initial version
# 2019-05-11 added nullable values to support patch
# 2019-05-17 TileRow and TileCol are now 'numbers' (not strings)
# 2019-05-17 "unless a different coordinate reference system is specified in the parameter `bbox-crs`." has been removed and instead we have added "unless a different coordinate         reference system is specified by another parameter in the API."
# 2019-05-21 "The default Tiling Scheme is the Google Maps Tiling Scheme" is changed to "The default Tiling Scheme is the WebMercatorQuad (sometimes refered as Google Maps Tiling Scheme)"
# 2019-05-21 "CRSId" has been added
# 
info:
  title: OGC API Building Blocks
  description: |-
    Common components used in the OGC API family of standards.
    
    This document is also available in [GitHub](https://github.com/opengeospatial/OGC-API-Map-Tiles/tree/master/standard/openapi).

  version: "1.0.0"
  contact:
    name: Joan Maso
    email: joan.maso@uab.cat
  license:
    name: OGC License
    url: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE'
    
components:
  ####################
  # Common data models
  ####################
  schemas:
    ##########################################
    # From OGC API Common collections extended
    ##########################################
    collectionInfo:
      allOf:
      - $ref: 'https://api.swaggerhub.com/domains/joanma747/ogc-api-map-tiles/1.0.0#/components/schemas/style-set'
      - type: object
        properties:
          styles:
            $ref: 'https://api.swaggerhub.com/domains/joanma747/ogc-api-map-tiles/1.0.0#/components/schemas/style-set'
          mapCRSSetLink: 
            $ref: '#/components/schemas/mapCRSSetLink'
          tileMatrixSetLink:
            $ref: '#/components/schemas/tileMatrixSetLink-set'
          defaultStyle:
            type: string
            description: |-
              the style id of a recommended default style to use for this collection
            example: 'topographic'
    collectionInfo-patch:
      type: object
      properties:
        styles:
          $ref: 'https://api.swaggerhub.com/domains/joanma747/ogc-api-map-tiles/1.0.0#/components/schemas/style-set'
        defaultStyle:
          type: string
          nullable: true
          description: |-
            the style id of a recommended default style to use for this collection
          example: 'topographic'  
    #######################
    # From OGC API Features
    #######################
    queryables:
      type: array
      nullable: true
      items:
        oneOf:
          - $ref: '#/components/schemas/queryable-string'
          - $ref: '#/components/schemas/queryable-enum'
          - $ref: '#/components/schemas/queryable-number'
          - $ref: '#/components/schemas/queryable-boolean'
          - $ref: '#/components/schemas/queryable-date'
          - $ref: '#/components/schemas/queryable-dateTime'
    queryable:
      type: object
      nullable: true
      required:
        - id
        - type
      properties:
        id:
          type: string
          nullable: true
          description: |-
            the property name for use in expressions
        description:
          type: string
          nullable: true
          description: |-
            a description of the property
        required:
          type: boolean
          nullable: true
          default: false
          description: |-
            indicator whether the property is always present in features
        mediaTypes:
          type: array
          nullable: true
          description: |-
            In cases where a property is available only in a subset of the
            supported feature encodings, the list of the media types of the
            encodings can be specified.
            
            This capabilitiy is also needed for cases where the names of
            properties may differ between feature encodings. For example, 
            identifiers in an XML/GML encoding may include a namespace, 
            in GeoJSON or MVT this is not the case. 
            
            There are other reasons, too. For example, the property identifier
            in a Shapefile may be different because of length restrictions.
          items:
            type: string
        type:
          type: string
          nullable: true
          description: |-
            the data type of the property
          enum:
            - string
            - uri
            - enum
            - number
            - integer
            - date
            - dateTime
            - boolean
      discriminator:
        propertyName: type
        mapping:
          string: queryable-string      
          enum: queryable-enum      
          uri: queryable-string      
          number: queryable-number      
          integer: queryable-number      
          date: queryable-date      
          dateTime: queryable-dateTie      
          boolean: queryable-boolean      
    queryable-string:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          pattern:
            type: string
            nullable: true
            description: a regular expression to validate the values of the property
      example:
        id: name
        description: the name of the vegetation area
        required: true
        type: string
        example: '[A-Z0-9]{5}'
    queryable-enum:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        required:
          - values
        properties:
          values:
            type: array
            nullable: true
            description: the list of values of the property
            items:
              type: string
      example:
        id: type
        description: the dominant charcteristic of vegetation area
        type: enum
        values: [ 'grassland', 'forest', 'farmland' ]
    queryable-number:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          range:
            type: array
            nullable: true
            minItems: 2
            maxItems: 2
            items:
              type: number
              nullable: true
            description: a range of valid values; open range can be expressed using `null`
      example:
        id: count
        description: the number of cattle
        type: integer
        range: [ 0 , null ]
    queryable-boolean:
      allOf:
      - $ref: '#/components/schemas/queryable'
      example:
        id: fenced
        description: indicator whether the area is walled or fenced
        type: boolean
    queryable-date:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          range:
            type: array
            nullable: true
            minItems: 2
            maxItems: 2
            items:
              type: string
              format: date
              nullable: true
            description: a range of valid values; open range can be expressed using `null`
      example:
        id: inspectionDate
        description: the date of the last inspection
        type: date
        range: [ '2010-01-01', null ]
    queryable-dateTime:
      allOf:
      - $ref: '#/components/schemas/queryable'
      - type: object
        nullable: true
        properties:
          range:
            type: array
            nullable: true
            minItems: 2
            maxItems: 2
            items:
              type: string
              format: date-time
              nullable: true
            description: a range of valid values; open range can be expressed using `null`
      example:
        id: lastUpdate
        description: the date of the last update of the feature
        type: dateTime
        range: [ '2018-01-01T00:00:00Z', null ]
    featureCollectionGeoJSON:
      required:
        - features
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/featureGeoJSON'
        links:
          type: array
          nullable: true
          items:
            $ref: 'https://api.swaggerhub.com/domains/OWSCommon/ogc-api-common/1.0.0#/components/schemas/link'
        timeStamp:
          type: string
          nullable: true
          format: dateTime
        numberMatched:
          minimum: 0
          type: integer
          nullable: true
        numberReturned:
          minimum: 0
          type: integer
          nullable: true
    featureGeoJSON:
      required:
        - geometry
        - properties
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - Feature
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        properties:
          type: object
          nullable: true
        id:
          oneOf:
            - type: string
            - type: integer
          nullable: true
        links:
          type: array
          nullable: true
          items:
            $ref: 'https://api.swaggerhub.com/domains/OWSCommon/ogc-api-common/1.0.0#/components/schemas/link'
    geometryGeoJSON:
      type: object
      required:
        - type
      nullable: true
      properties:
        type:
          type: string
          enum:
            - Point
            - MultiPoint
            - LineString
            - MultiLineString
            - Polygon
            - MultiPolygon
            - GeometryCollection
    ########################
    # From OGC API Coverages
    ########################
    domainSetJSON:
      description: TBD
      required:
      - type
      type: object
      properties:
        type:
          type: string
    rangeTypeJSON:
      description: TBD
      type: object
    #############################
    # From OGC API Styles?
    #############################
    style-set:
      type: array
      nullable: true
      items:
        $ref: '#/components/schemas/style-set-entry'
      example:
        - id: 'night'
          title: 'Topographic night style'
          links:
          - href: 'https://example.com/api/1.0/styles/night?f=mapbox'
            type: 'application/vnd.mapbox.style+json'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/night?f=sld10'
            type: 'application/vnd.ogc.sld+xml;version=1.0'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/night/metadata?f=json'
            type: 'application/json'
            rel: 'describedBy'
        - id: 'topographic'
          title: 'Regular topographic style'
          links:
          - href: 'https://example.com/api/1.0/styles/topographic?f=mapbox'
            type: 'application/vnd.mapbox.style+json'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/topographic?f=sld10'
            type: 'application/vnd.ogc.sld+xml;version=1.0'
            rel: 'stylesheet'
          - href: 'https://example.com/api/1.0/styles/topographic/metadata?f=json'
            type: 'application/json'
            rel: 'describedBy'
    style-set-entry:
      type: object
      nullable: true
      required:
        - id
        - links
      properties:
        id:
          type: string
          nullable: true
        title:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: 'https://api.swaggerhub.com/domains/OWSCommon/ogc-api-common/1.0.0#/components/schemas/link'   
    #############################
    # From OGC API Maps and Tiles
    #############################
    tileMatrix:
      type: object
      nullable: true
      required: 
        - type
        - identifier
        - scaleDenominator
        - topLeftCorner
        - tileWidth
        - tileHeight
        - matrixWidth
        - matrixHeight
      properties:
        type:
          description: Type of the Tile Matrix
          type: string
          enum:
            - TileMatrix
        title:
          description: Title of this tile matrix set, normally used for display to a human
          type: string
          nullable: true
          example: Google Maps Compatible for the World
        abstract:
          description: Brief narrative description of this tile matrix, normally available for display to a human
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s) or phrase(s) used to describe this dataset
          type: array
          items:
            type: string
        identifier:
          description: Tile matrix identifier,
          type: string
          example: '0'
        scaleDenominator:
          description: Scale denominator level of this tile matrix
          type: number
          example: 559082264.028717
        topLeftCorner:
          description: Position in CRS coordinates of the top-left corner of this tile matrix
          type: array
          nullable: true
          items: 
            type: number
          example:
            - -20037508.3427892
            - 20037508.3427892
        tileWidth:
          description: Width of each tile of this tile matrix in pixels
          type: number
          minimum: 1
          multipleOf: 1
          example: 256
        tileHeight:
          description: Height of each tile of this tile matrix in pixels
          type: number
          minimum: 1
          multipleOf: 1
          example: 256
        matrixHeight:
          description: Width of the matrix (number of tiles in width)
          type: number
          minimum: 1
          example: 3
        matrixWidth:
          description: Height of the matrix (number of tiles in height)
          type: number
          minimum: 1
          example: 4
    tileMatrixSets:
      type: array
      items:
        $ref: '#/components/schemas/tileMatrixSet'
    tileMatrixSet:
      required:
        - identifier
        - type
      type: object
      nullable: true
      properties:
        type:
          description: Type of the Tile Matrix Set
          type: string
          enum:
            - TileMatrixSet
        title:
          description: Title of this tile matrix set, normally used for display to a human
          type: string
          nullable: true
          example: Google Maps Compatible for the World
        abstract:
          description: Brief narrative description of this tile matrix set, normally available for display to a human
          type: string
        keywords:
          description: Unordered list of one or more commonly used or formalized word(s) or phrase(s) used to describe this dataset
          type: array
          items:
            type: string
        identifier:
          description: Tile matrix set identifier,
          type: string
          example: default
        supportedCRS:
          description: Reference to one coordinate reference system (CRS)
          type: string
          format: uri
          nullable: true
          example: 'http://www.opengis.net/def/crs/EPSG/0/3857'
        wellKnownScaleSet:
          description: Reference to a well-known scale set
          type: string
          nullable: true
          example: 'http://www.opengis.net/def/wkss/OGC/1.0/GoogleMapsCompatible'
        tileMatrix:
          description: Describes a scale level and its tile matrix
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/tileMatrix'
    mapbox-vector-tile:
      type: string
      format: binary
    tileMatrixSetLink-set:
      description: |-
        This list tileMatrixSetLink as defined in OGC 17-083r2 supported by this collectionId. 
        The presence of this property indicates that the collection is available as tiles
      type: array
      nullable: true
      items:
        $ref: '#/components/schemas/tileMatrixSetLink-entry'
      example:
        - id: 'WebMercatorQuad'
          links:
          - href: 'https://example.com/api/1.0/tileMatrixSet/WebMercatorQuad?f=ogc-tms-1-0'
            type: 'application/vnd.ogc-tms-1-0.tms+json'
            rel: 'tileMatrixSet'
    tileMatrixSetLink-entry:
      type: object
      nullable: true
      required:
        - id
        - links
      properties:
        id:
          type: string
          nullable: true
        links:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: 'https://api.swaggerhub.com/domains/OWSCommon/ogc-api-common/1.0.0#/components/schemas/link'
        tileMatrixSetLimits:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/tileMatrixSetLimits-entry'
    tileMatrixSetLimits-entry:
      type: object
      nullable: true
      required:
        - tileMatrix
        - minTileRow
        - maxTileRow
        - minTileCol
        - maxTileCol
      properties:
        tileMatrix:
          type: string
        minTileRow:
          type: number
          nullable: true
          minItems: 0
          items:
            $ref: 'https://api.swaggerhub.com/domains/OWSCommon/ogc-api-common/1.0.0#/components/schemas/link'
        tileMatrixSetLimits:
          type: array
          nullable: true
          minItems: 1
          items:
            $ref: '#/components/schemas/tileMatrixSetLimits-entry'
    mapCRSSetLink:
      description: |-
        This list crsIds supported by this collectionId.  The presence of this property indicates that the collection is available as maps
      type: array
      nullable: true
      items:
        $ref: '#/components/schemas/crs-entry'
      example:
        - id: 'CRS:84'
          links:
          - href: 'http://www.opengis.net/def/crs/OGC/1.3/CRS84'
            type: 'application/xml'
            rel: 'describedby'
    crs-entry:
      type: object
      nullable: true
      required:
        - id
        - links
      properties:
        id:
          type: string
          nullable: false
        title:
          type: string
          nullable: true
        links:
          type: array
          nullable: false
          minItems: 1
          items:
            $ref: 'https://api.swaggerhub.com/domains/OWSCommon/ogc-api-common/1.0.0#/components/schemas/link'
    tileSet:
      description: |-
        This is the response for a multiple tiles request.
      required:
        - type
      type: array
      items:
        $ref: '#/components/schemas/tileSetEntry'
    tileSetEntry:
      description: |-
        This is an entry on a multiple tiles request.
      type: object
      required:
        - tileURL
        - tileMatrix
        - tileRow
        - tileCol
      properties: 
        tileURL:
          type: string
          format: anyURI
          nullable: false
        tileMatrix:
          type: string
          nullable: false
        tileRow:
          type: number
          nullable: false
        tileCol:
          type: number
          nullable: false
        width:
          type: number
          description: |-
            The width of the tile in rendering device pixels. If it exceeds the visual display area be should cut when displayed
          nullable: true
        height:
          type: number
          description: |-
            The height of the tile in rendering device pixels. If it exceeds the visual display area be should cut when displayed
          nullable: true
        top:
          type: number
          description: |-
            Vertical position from the top of the visual display area in pixels. Negative value means that the left side of the tile is outside the top-left corner of the display and should be cut when displayed
          nullable: true
        left:
          type: number
          description: |-
            Horizontal position from the left of the visual display area in pixels. Negative value means that the left side of the tile is outside the top-left corner of the display and should be cut when displayed
          nullable: true
    simbologyEncoding:
      description: |-
        SE encoding to create a map.
      type: string
  ####################
  # Common parameters
  ####################
  parameters:
    #######################
    # From OGC API Features
    #######################
    featureId:
      name: featureId
      in: path
      description: |-
        local identifier of a feature
      required: true
      schema:
        type: string
    properties:
      name: properties
      in: query
      description: |-
        The properties that should be included for each feature. The parameter
        value is a comma-separated list of property names.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    ########################
    # From OGC API Coverages
    ########################
    coverageId:
      name: coverageId
      in: path
      description: Local identifier of a specific coverage
      required: true
      style: simple
      explode: false
      schema:
        type: string
    #############################
    # From OGC API Maps and Tiles
    #############################
    mapId:
      name: mapId
      in: path
      description: Local identifier of a specific map created with a post operation
      required: true
      style: simple
      explode: false
      schema:
        type: string
    crsId:
      name: crsId
      in: path
      description: |-
        Local identifier of a specific CRS. A list of all available CRSIds can be found under the /CRS path. The default CRS is WGS 84.
      required: true
      schema:
        type: string
      example: WGS84
    tileMatrixSetId:
      name: tileMatrixSetId
      in: path
      description: |-
        Local identifier of a specific tiling scheme. A list of all available tileMatrixSetIds can be found under the /tiles path or below. The default Tiling Scheme is the WebMercatorQuad (sometimes refered as Google Maps Tiling Scheme).
      required: true
      schema:
        type: string
      example: WebMercatorQuad
    tileMatrix:
      name: tileMatrix
      in: path
      description: |-
        scaleDenominator of the tile. 
        
        If the Google Maps Tiling Scheme is used see
        http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
        for more information about `tileMatrix`, `tileRow` and `tileCol`. For example, 
        Ireland is fully within the Tile at tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: string
      example: '11'
    tileRow:
      name: tileRow
      in: path
      description: |-
        Row index of the tile on the selected zoom level. 
        
        If the Google Maps Tiling Scheme is used see
        http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
        for more information about `tileMatrix`, `tileRow` and `tileCol`. For example, 
        Ireland is fully within the Tile at tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: number
      example: '827'
    tileCol:
      name: tileCol
      in: path
      description: |-
        Column index of the tile on the selected zoom level. 
        
        http://www.maptiler.org/google-maps-coordinates-tile-bounds-projection/
        for more information about `tileMatrix`, `tileRow` and `tileCol`. For example, 
        Ireland is fully within the Tile at tileMatrix=5, tileRow=10 and tileCol=15.
      required: true
      schema:
        type: number
      example: 1231
    collections:
      name: collections
      in: query
      description: |-
        The collections that should be included in the response. The parameter value
        is a comma-separated list of collection identifiers.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    infoCollections:
      name: infoCollections
      in: query
      description: |-
        The collections that are used in a response of a information request. The parameter value is a comma-separated list of collection identifiers.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    styleId:
      name: styleId
      in: path
      description: |-
        The styleId that should be included in the map or tile. Each collectionId has a valid list of stylesId. To know the valid styleId values of each collectionId use /collections/{collectionId}.
      required: true
      schema:
        type: string
    styles:
      name: styles
      in: query
      description: |-
        The styleId that should be included in the map or tile. Each collectionId has a valid list of stylesId. To know the valid styleId values of each collectionId use /collections/{collectionId}.
        The parameter value is a list of comma separated styles identifiers. If the parameter 'collections' exists, the list should be as long as 'collections' and each styleId correspons to one collectionId. If the path includes 'collections/{collectionId}' one style should be mentioned. 
      required: false
      style: form
      explode: false
      schema:
        type: string
    width:
      name: width
      in: query
      description: |-
        Width in pixels of map picture.
      required: true
      style: form
      explode: false
      schema:
        type: number
    height:
      name: height
      in: query
      description: |-
        Height in pixels of map picture.
      required: true
      style: form
      explode: false
      schema:
        type: number    
    coord_i:
      name: i
      in: query
      description: |-
        Horizontal (x) coordinate within a map or tile.
      required: true
      style: form
      explode: false
      schema:
        type: number
    coord_j:
      name: j
      in: query
      description: |-
        Vertical (y) coordinate within a map or tile.
      required: true
      style: form
      explode: false
      schema:
        type: number        
    scaleDenominator:
      name: scaleDenominator
      in: query
      description: |-
         A range of scale denominators (that can be used to generate a list of tileMatrix names. Note that scale denominators have several significant digits. To prevent mistakes apply tolerances to intervals. Even if you want to specify a single scale denominator use an interval with tolerance
      required: false
      style: form
      explode: false
      schema:
        type: array
        minItems: 2
        maxItems: 2
        items:
          type: number
    infoTemplate:
      name: infoTemplate
      in: query
      description: |-
        template used for the information response. This parameter can be used to select among GML application schemas or JSON schemas and provide alternative presentations for the same information
      required: false
      style: form
      explode: false
      schema:
        type: number        
    transparent:
      name: transparent
      in: query
      description: |-
        Background transparency of map (default=FALSE). 
      required: false
      style: form
      explode: false
      schema:
        type: boolean    
    bgcolor:
      name: bgcolor
      in: query
      description: |-
        Hexadecimal red-green-blue[-alpha] color value for the background color (default=0xFFFFFF) if alpha is not specified "opaque" opacity is assumed.
      required: false
      style: form
      explode: false
      schema:
        type: string    
    elevation:
      name: elevation
      in: query
      description: |-
        Elevation value
      required: false
      style: form
      explode: false
      schema:
        type: number        
    map-crs:
      name: crs
      in: query
      description: |-
        CRSId used to render the map. It is also the CRS of the bbox parameter.
        You can only ask for CRSs that are valid for the collectionId.
      required: false
      style: form
      explode: false
      schema:
        type: string
      example: 'EPSG:4326'
    mapFormat:
      name: mapFormat
      in: query
      description: |-
        Internal format of the maps referenced by a getFeatureInfo.
      required: false
      style: form
      schema:
        type: string          
    tileFormat:
      name: tileFormat
      in: query
      description: |-
        Internal format of the multi-tiles referenced or embedded for the info request on a tile
      required: false
      style: form
      schema:
        type: string          
    embedded:
      name: embedded
      in: query
      description: |-
        Are the tiles embedded. If false they are only referenced.
      required: false
      style: form
      schema:
        type: boolean
        
  #######################
  # Common request bodies
  #######################
  requestBodies: {}

  ####################
  # Common responses
  ####################
  responses:
    {}

  #########################
  # Common response headers
  #########################
  headers:
    {}

  #######################
  # Common path items
  # NOTE: Referencing pathitems does not seem to work, so I have stopped defining/using them
  #######################

  ######################################
  # Common examples of input/output data
  ######################################
  examples: {}

  #########################
  # Common link definitions
  #########################
  links: {}

  #########################
  # Common callback definitions
  #########################
  callbacks: {}