openapi: 3.0.0
# Revisions:
# 2019-06-14 Created from a more complex example
#
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/joanma747/opf-map-tiles-api/1.0.0
info:
  title: |-
    Tiled coverage data service example. Part of the OGC API Maps and Tiles OpenAPI work.
  description: |-
    This is a draft of an example of a service following the OGC API maps and tiles that produces tiled feature data.

    It is elaborated in the Testbed-15 Open Portrayal Framework in collaboration with the WMS.SWG. The Map Tile API is a Web API for fetching and managing tiled coverage data.

    It illustrated how to request tiled coverage data from one coverage. Generate coverages from more than one coverage is not usually useful an has been skiped.

    The use case for that is a GeoPackage that want to create elevation tiles from a coverage service

  version: "1.0.0"
  contact:
    name: Joan Maso
    email: joan.maso@uab.cat
  license:
    name: OGC License
    url: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/LICENSE'
tags:
  - name: OGC API Common
    description: |-
      Common characteristics of this API
  - name: TileMatrixSet
    description: |-
      TileMatrixSet used in this API
  - name: OGC API Coverages
    description: |-
      access to data (coverages)
  - name: Tiled coverages with one collection
    description: |-
      Coverage partitioned into a hierarchy of tiles of a collection
paths:
  '/':
    get:
      tags:
        - OGC API Common
      summary: landing page
      description: |-
        The landing page provides links to the API definition, the conformance statements and to the feature collections in this dataset.
      operationId: getLandingPage
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/f-json-html'
      responses:
        '200':
          description: |-
            Links to the API capabilities and the TileMatrixSets shared by this API.
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/schemas/landingPage'
              example:
                - href: 'http://data.example.org/?f=json'
                  rel: self
                  type: application/json
                  title: this document
                - href: 'http://data.example.org/?f=html'
                  rel: alternate
                  type: text/html
                  title: this document in HTML
                - href: 'http://data.example.org/api?f=json'
                  rel: service
                  type: application/vnd.oai.openapi+json;version=3.0
                  title: the API definition in OpenAPI 3.0 JSON
                - href: 'http://data.example.org/api?f=html'
                  rel: service
                  type: text/html
                  title: the API definition in HTML
                - href: 'http://data.example.org/conformance?f=json'
                  rel: conformance
                  type: application/json
                  title: the list of conformance classes implemented by this API
                - href: 'http://data.example.org/collections?f=json'
                  rel: data
                  type: application/json
                  title: The collections in the dataset in JSON
                - href: 'http://data.example.org/collections?f=html'
                  rel: data
                  type: text/html
                  title: The collections in the dataset in HTML
                - href: 'http://data.example.org/tileMatrixSet?f=json'
                  rel: tileMatrixSets
                  type: application/json
                  title: the list of tileMatrixSets implemented by this API in JSON
                - href: 'http://data.example.org/tileMatrixSet?f=html'
                  rel: tileMatrixSets
                  type: text/html
                  title: the list of tileMatrixSets implemented by this API in HTML
            text/html:
              schema:
                type: string
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  '/conformance':
    get:
      description: |-
        A list of all requirements classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/f-json-html'
      tags:
        - OGC API Common
      responses:
        '200':
          description: |-
            the URIs of all requirements classes supported by this API
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/schemas/confClasses'
              example:
                - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/core'
                - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/oas30'
                - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/html'
                - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/req/geojson'
                - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/core'
                - 'http://www.opengis.net/spec/ogcapi-maps-1/1.0/req/info'
                - 'http://www.opengis.net/spec/ogcapi-tiles-1/1.0/req/core'
                - 'http://www.opengis.net/spec/ogcapi-tiles-1/1.0/req/multitile'
                - 'http://www.opengis.net/spec/ogcapi-tiles-1/1.0/req/info'
        '400':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/InvalidParam'
        '406':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/UnsupportedFormat'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  '/collections':
    get:
      tags:
        - OGC API Common
      summary: the collections in the dataset
      operationId: getCollections
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/f-json-html'
      responses:
        '200':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/Collections'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  '/collections/{collectionId}':
    get:
      tags:
        - OGC API Common
      summary: describe a collection
      operationId: describeCollection
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/f-json-html'
      responses:
        '200':
          description: |-
            Metadata about the collection including style information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection'
            text/html:
              schema:
                type: string
        '404':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
    patch:
      tags:
        - OGC API Common
      summary: |-
        update parts of the style metadata
      description: |-
        IMPORTANT: This operation is defined by Clemens P. in the Testbed 15. It is included here for INFORMATION ONLY But is OUT OF SCOPE for Maps and Tiles.

        Update selected elements of the metadata for
        the collection with the id `collectionId`.

        The only members that may be updated at this
        time are `styles` and `defaultStyle`.

        The PATCH semantics in this operation are defined by
        RFC 7396 (JSON Merge Patch). From the specification:

        _"A JSON merge patch document describes changes to be
        made to a target JSON document using a syntax that
        closely mimics the document being modified. Recipients
        of a merge patch document determine the exact set of
        changes being requested by comparing the content of
        the provided patch against the current content of the
        target document. If the provided merge patch contains
        members that do not appear within the target, those
        members are added. If the target does contain the
        member, the value is replaced. Null values in the
        merge patch are given special meaning to indicate
        the removal of existing values in the target."_

        Some examples:

        To add or update the default style, just send

        ```
        {
          "defaultStyle": "night"
        }
        ```

        To remove the default style, send

        ```
        {
          "defaultStyle": null
        }
        ```

        For arrays the complete array needs to be sent. I.e., to
        update the list of styles, send the complete new array value.

        To remove all styles, send

        ```
        {
          "styles": null
        }
        ```

        This operation is only available to registered
        users.
      operationId: patchCollectionMetadata
      security:
        - BasicAuth: []
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
      requestBody:
        description: |-
          The updated style information for the collection.
        content:
          application/merge-patch+json:
            schema:
              $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-maps.yaml#/components/schemas/collection-patch'
      responses:
        '204':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/Updated'
        '400':
          description: |-
            Malformed patch document.
        '401':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/UnauthorizedAccess'
        '404':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/NotFound'
        '415':
          description: |-
            Unsupported patch document.
          headers:
            Accept-Patch:
              description: |-
                supported patch document media types
              schema:
                type: string
        '422':
          description: |-
            Unprocessable request. The patch document appears
            to be valid, but the server is incapable of processing
            the request.
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  '/tileMatrixSets':
    get:
      tags:
        - TileMatrixSet
      summary: fetch all available tile matrix sets (tiling schemes)
      operationId: getTileMatrixSets
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/f-json'
      responses:
        '200':
          description: |-
            An array of tile matrix sets (tiling schemes).
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/schemas/tileMatrixSets'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  '/tileMatrixSets/{tileMatrixSetId}':
    get:
      tags:
        - TileMatrixSet
      summary: fetch a tile matrix sets (tiling scheme) by id
      operationId: getTileMatrixSetDescription
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/parameters/tileMatrixSetId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/f-json'
      responses:
        '200':
          description: tile matrix sets (a tiling scheme).
          content:
            application/json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/schemas/tileMatrixSet'
        '404':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/NotFound'
        '500':
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'

  /collections/{collectionId}/coverages:
    get:
      tags:
      - OGC API Coverages
      summary: retrieve coverages of the collection {collectionId}
      description: |-
        Every coverage to a collection.
        Use content negotiation to request HTML or GeoJSON.
      operationId: getCoverages
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/limit'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/offset'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/bbox'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/datetime'
      responses:
        200:
          description: Information about the feature collection plus the first features
            matching the selection parameters.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-features.yaml#/components/schemas/featureCollectionGeoJSON'
            text/html:
              schema:
                type: string
        default:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  /collections/{collectionId}/coverages/{coverageId}:
    get:
      tags:
      - OGC API Coverages
      summary: retrieve a coverage; use content negotiation to request either a multipart
        response or the coverages rangeType in the specified format
      operationId: getCoverage
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/parameters/coverageId'
      responses:
        200:
          description: A coverage.
          content:
            application/multipart+related:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-features.yaml#/components/schemas/featureGeoJSON'
            text/html:
              schema:
                type: string
        default:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  /collections/{collectionId}/coverages/{coverageId}/domainset:
    get:
      tags:
      - OGC API Coverages
      summary: retrieve a coverages domainset; use content negotiation to request
        HTML or GeoJSON
      operationId: getCoverageDomainSet
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/parameters/coverageId'
      responses:
        200:
          description: A coverages domainset.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/schemas/domainSetJSON'
            text/html:
              schema:
                type: string
        default:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'
  /collections/{collectionId}/coverages/{coverageId}/rangetype:
    get:
      tags:
      - OGC API Coverages
      summary: retrieve a coverages rangetype; use content negotiation to request
        HTML or GeoJSON
      operationId: getCoverageRangeType
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/parameters/coverageId'
      responses:
        200:
          description: A coverages rangetype.
          content:
            application/geo+json:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/schemas/rangeTypeJSON'
            text/html:
              schema:
                type: string
        default:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'

  '/collections/{collectionId}/coverages/{coverageId}/tiles/{tileMatrixSetId}/{tileMatrix}/{tileRow}/{tileCol}':
    get:
      tags:
      - Tiled coverages with one collection
      summary: retrieve a coverage; use content negotiation to request either a multipart
        response or the coverages rangeType in the specified format
      operationId: getTileCoverageId
      parameters:
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/collectionId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/parameters/coverageId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/parameters/datetime'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-map-tiles.yaml#/components/parameters/elevation'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/parameters/tileMatrixSetId'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/parameters/tileMatrix'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/parameters/tileRow'
        - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/parameters/tileCol'
        - $ref: '#/components/parameters/f-geotiff'
      responses:
        200:
          description: A coverage.
          content:
            application/multipart+related:
              schema:
                $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-features.yaml#/components/schemas/featureGeoJSON'
            text/html:
              schema:
                type: string
        default:
          $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/responses/ServerError'

components:
  schemas:
    collection:
      allOf:
      - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-common.yaml#/components/schemas/collection'
      - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-coverages.yaml#/components/schemas/collection'
      - $ref: 'https://raw.githubusercontent.com/opengeospatial/OGC-API-Map-Tiles/master/standard/openapi/ogc-api-tiles.yaml#/components/schemas/collection'
  parameters:
    f-json-zip:
      name: f
      in: query
      description: |-
        The format of the response. If no value is provided, the standard http
        rules apply, i.e., the accept header is used to determine the format.

        The only pre-defined value is "json". The response to other values is
        determined by the server.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - json
          - zip
      example: json
    f-geotiff:
      name: f
      in: query
      description: |-
        The format of the response. If no value is provided, the standard http
        rules apply, i.e., the accept header is used to determine the format.

        The only pre-defined value is "geotiff". The response to other values is
        determined by the server.
      required: false
      style: form
      explode: false
      schema:
        type: string
        enum:
          - geotiff
        default: geotiff

  responses: {}
